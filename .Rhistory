corrplot(cor(Auto[,-9]), method = "square")
train <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training <- Auto[train,]
test <- Auto[-train]
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, subset = training)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, subset = training)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data = training)
lda.pred <- predict(lda.fit, newdata = test, type="response")$class
table(lda.pred, test$mpg01)
idxs <- sample(1:dim(auto)[1], size=dim(auto)[1]*0.75)
idxs <- sample(1:dim(Auto)[1], size=dim(Auto)[1]*0.75)
training <- Auto[idxs,]
test = Auto[-idxs,]
lda.fit2 = lda(mpg01~displacement+weight+cylinders+year, data=training)
pred.lda2 = predict(lda.fit2, newdata=test, type="response")$class
table(pred.lda2, test$mpg01)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training)
lda.pred <- predict(lda.fit, newdata = test, type="response")$class
table(lda.pred, test$mpg01)
mean(lda.pred ==test$mpg01)
table(lda.pred, test$mpg01)
mean(lda.pred == test$mpg01)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training)
lda.fit
lda.pred <- predict(lda.fit, newdata = test, type="response")$class
lda.pred
table(lda.pred, test$mpg01)
mean(lda.pred == !test$mpg01)
mean(lda.pred == test$mpg01)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training)
lda.fit
lda.pred <- predict(lda.fit, newdata = test, type="response")$class
lda.pred
table(lda.pred, test$mpg01)
mean(lda.pred == test$mpg01)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
library(class)
library(tidyverse)
library(corrplot)
attach(Weekly)
names(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
corrplot(cor(Weekly[,-9]), method = "square")
glm.fit <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family = binomial)
summary(glm.fit)
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
#glm.probs
contrasts(Direction)
glm.pred <- rep("Down", 1089)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
weekly.probs <- predict(Weekly.fit, Weekly.08, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
Direction.08 <- Direction[!training]
table(weekly.pred, Direction.08)
mean(weekly.pred == Direction.08)
lda.fit <- lda(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
lda.pred <- predict(lda.fit, Weekly.08)
lda.class <- lda.pred$class
table(lda.class, Direction.08)
mean(lda.class==Direction.08)
qda.fit <- qda(Direction ~ Lag2, data = Weekly, subset = training)
qda.fit
qda.class <- predict(qda.fit, Weekly.08)$class
table (qda.class, Direction.08)
mean(qda.class==Direction.08)
weekly.training <- as.matrix(Lag2[training])
weekly.test <- as.matrix(Lag2[!training])
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(weekly.training, weekly.test, train.Direction, k=1)
table(knn.pred, Direction.08)
mean(knn.pred == Direction.08)
qda.fit2 <- qda(Direction ~ Lag1 + Lag2 + Lag5, data = Weekly, subset = training)
qda.fit2
qda.class2 <- predict(qda.fit2, Weekly.08)$class
table (qda.class2, Direction.08)
mean(qda.class2==Direction.08)
lda.fit2 <- lda(Direction ~ Lag1 + Lag2 + Lag5, data = Weekly, subset = training, family = "binomial")
lda.pred2 <- predict(lda.fit2, Weekly.08)
lda.class2 <- lda.pred2$class
table(lda.class2, Direction.08)
mean(lda.class2==Direction.08)
weekly.training2 <- cbind(Lag1, Lag2, Lag5)[training,]
weekly.test2 <- cbind(Lag1, Lag2, Lag5)[!training,]
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred1 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
table(knn.pred1, Direction.08)
mean(knn.pred1 == Direction.08)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
table(knn.pred2, Direction.08)
mean(knn.pred2 == Direction.08)
knn.pred3 <- knn(weekly.training2, weekly.test2, train.Direction2, k=100)
table(knn.pred3, Direction.08)
mean(knn.pred3 == Direction.08)
attach(Auto)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] <- 1
Auto = data.frame(Auto, mpg01)
summary(Auto)
str(Auto)
corrplot(cor(Auto[,-9]), method = "square")
train <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training <- Auto[train,]
test <- Auto[-train]
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training)
lda.fit
lda.pred <- predict(lda.fit, newdata = test, type="response")$class
lda.pred
table(lda.pred, test$mpg01)
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training)
lda.fit11
lda.pred11 <- predict(lda.fit, newdata = test, type="response")$class
lda.pred11
table(lda.pred11, test$mpg01)
train11 <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training11 <- Auto[train,]
test11 <- Auto[-train]
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training)
lda.pred11 <- predict(lda.fit, newdata = test, type="response")$class
table(lda.pred11, test$mpg01)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
library(class)
library(tidyverse)
library(corrplot)
attach(Weekly)
names(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
corrplot(cor(Weekly[,-9]), method = "square")
glm.fit <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family = binomial)
summary(glm.fit)
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
#glm.probs
contrasts(Direction)
glm.pred <- rep("Down", 1089)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
weekly.probs <- predict(Weekly.fit, Weekly.08, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
Direction.08 <- Direction[!training]
table(weekly.pred, Direction.08)
mean(weekly.pred == Direction.08)
lda.fit <- lda(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
lda.pred <- predict(lda.fit, Weekly.08)
lda.class <- lda.pred$class
table(lda.class, Direction.08)
mean(lda.class==Direction.08)
qda.fit <- qda(Direction ~ Lag2, data = Weekly, subset = training)
qda.fit
qda.class <- predict(qda.fit, Weekly.08)$class
table (qda.class, Direction.08)
mean(qda.class==Direction.08)
weekly.training <- as.matrix(Lag2[training])
weekly.test <- as.matrix(Lag2[!training])
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(weekly.training, weekly.test, train.Direction, k=1)
table(knn.pred, Direction.08)
mean(knn.pred == Direction.08)
qda.fit2 <- qda(Direction ~ Lag1 + Lag2 + Lag5, data = Weekly, subset = training)
qda.fit2
qda.class2 <- predict(qda.fit2, Weekly.08)$class
table (qda.class2, Direction.08)
mean(qda.class2==Direction.08)
lda.fit2 <- lda(Direction ~ Lag1 + Lag2 + Lag5, data = Weekly, subset = training, family = "binomial")
lda.pred2 <- predict(lda.fit2, Weekly.08)
lda.class2 <- lda.pred2$class
table(lda.class2, Direction.08)
mean(lda.class2==Direction.08)
weekly.training2 <- cbind(Lag1, Lag2, Lag5)[training,]
weekly.test2 <- cbind(Lag1, Lag2, Lag5)[!training,]
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred1 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
table(knn.pred1, Direction.08)
mean(knn.pred1 == Direction.08)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
table(knn.pred2, Direction.08)
mean(knn.pred2 == Direction.08)
knn.pred3 <- knn(weekly.training2, weekly.test2, train.Direction2, k=100)
table(knn.pred3, Direction.08)
mean(knn.pred3 == Direction.08)
attach(Auto)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] <- 1
Auto = data.frame(Auto, mpg01)
summary(Auto)
str(Auto)
corrplot(cor(Auto[,-9]), method = "square")
train11 <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training11 <- Auto[train,]
train11 <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training11 <- Auto[train11,]
test11 <- Auto[-train11]
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training11)
lda.fit11
lda.pred11 <- predict(lda.fit, newdata = test11, type="response")$class
lda.pred11
table(lda.pred11, test11$mpg01)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] <- 1
auto = data.frame(Auto, mpg01)
summary(auto)
str(auto)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] <- 1
auto = data.frame(Auto, mpg01)
summary(auto)
str(auto)
corrplot(cor(auto[,-9]), method = "square")
train11 <- sample(1:dim(auto)[1], size = dim(auto [1]*0.75))
training11 <- auto[train11,]
test11 <- auto[-train11]
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training11)
lda.fit11
lda.pred11 <- predict(lda.fit, newdata = test11, type="response")$class
lda.pred11
table(lda.pred11, test11$mpg01)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
auto = data.frame(Auto, mpg01)
summary(auto)
str(auto)
train11 <- sample(1:dim(auto)[1], size = dim(auto [1]*0.75))
training11 <- auto[train11,]
test11 <- auto[-train11]
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training11)
lda.fit11
lda.pred11 <- predict(lda.fit, newdata = test11, type="response")$class
lda.pred11
table(lda.pred11, test11$mpg01)
summary(lda.pred11)
lda.pred11 <- predict(lda.fit, newdata = test11, type="response")
lda.pred11
str(Auto)
train11 <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training11 <- Auto[train11,]
test11 <- Auto[-train11]
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training11)
lda.fit11
lda.pred11 <- predict(lda.fit, newdata = test11, type="response")$class
lda.pred11
table(lda.pred11, test11$mpg01)
library(ISLR)
library(MASS)
library(class)
library(corrplot)
attach(Auto)
detach(tidyvrse)
detach(library:tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
library(class)
library(corrplot)
attach(Auto)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
auto = data.frame(Auto, mpg01)
summary(auto)
str(auto)
corrplot(cor(auto[,-9]), method = "square")
train11 <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training11 <- Auto[train11,]
test11 <- Auto[-train11]
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training11)
lda.fit11
lda.pred11 <- predict(lda.fit, newdata = test11, type="response")$class
?lda
library(MASS)
lda.fit11 <- lda(mpg01 ~ displacement + weight + cylinders + year, data = training11)
lda.fit11
lda.pred11 <- predict(lda.fit11, newdata = test11, type="response")$class
lda.pred11
table(lda.pred11, test11$mpg01)
summary(lda.pred11)
summary(test11$mpg01)
summary(test11)
view(mpg01)
?view
table(lda.pred11$class, test11$mpg01)
lda.pred11
test11
table(lda.pred11, test11$)
table(lda.pred11, test11)
set.seed(123)
train11 <- sample(1:dim(Auto)[1], dim(Auto [1]*0.7))
training11 <- Auto[train11,]
test11 <- Auto[-train11]
testing <- Auto[test,]
set.seed(123)
train11 <- sample(1:dim(Auto)[1], dim(Auto [1]*0.7))
training11 <- Auto[train11,]
test11 <- Auto[-train11]
testing <- Auto[test11,]
set.seed(123)
train11 <- sample(1:dim(Auto)[1], dim(Auto [1]*0.7))
training11 <- Auto[train11,]
test11 <- Auto[-train11]
testing <- Auto[test11]
set.seed(123)
train11 <- sample(1:dim(Auto)[1], dim(Auto)[1]*0.7, rep = F)
training11 <- Auto[train11,]
test11 <- Auto[-train11]
testing <- Auto[test11]
View(training11)
mpg01test <- mpg01[test11]
set.seed(123)
train11 <- sample(1:dim(auto)[1], dim(Auto)[1]*0.7, rep = F)
training11 <- auto[train11,]
test11 <- auto[-train11]
testing <- auto[test11]
testing <- auto[test11,]
set.seed(123)
train11 <- sample(1:dim(auto)[1], dim(Auto)[1]*0.7, list = F)
mpg01 <- rep(0, length(Auto$mpg))
mpg01[Auto$mpg > median(Auto$mpg)] <- 1
auto <-  data.frame(Auto, mpg01)
set.seed(1234)
num_train <- nrow(Auto) * 0.7
in_train <- sample(nrow(Auto, size = num_train))
set.seed(1234)
num_train <- nrow(auto) * 0.7
in_train <- sample(nrow(auto, size = num_train))
set.seed(1234)
num_train <- nrow(auto) * 0.7
in_train <- sample(nrow(auto, size = num_train))
num_train <- nrow(Auto) * 0.7
in_Train <- sample(nrow(Auto), size = num_train)
Auto_training <- Auto[in_Train, ]
Auto_testing <- Auto[-in_Train, ]
mpg01 <- rep(0, length(Auto$mpg))
mpg01[Auto$mpg > median(Auto$mpg)] <- 1
Auto <-  data.frame(Auto, mpg01)
set.seed(1234)
num_train <- nrow(Auto) * 0.7
in_Train <- sample(nrow(Auto), size = num_train)
Auto_training <- Auto[in_Train, ]
Auto_testing <- Auto[-in_Train, ]
Auto.lda <- lda(mpg01 ~ displacement + weight + cylinders + year, data = Auto_training)
Auto.lda <- lda(mpg01 ~ displacement + weight + cylinders + year, data = Auto_training)
Auto.prediction <- predict(Auto.lda, Auto_testing)
table(Auto.prediction, Auto_testing$mpg01)
mean(Auto.prediction$class == Auto_testing$mpg01)
table(Auto.prediction, Auto_testing$mpg01)
table(Auto.prediction$class, Auto_testing$mpg01)
Auto.lda <- lda(mpg01 ~ displacement + weight + cylinders + year, data = Auto_training)
Auto.prediction <- predict(Auto.lda, Auto_testing)
table(Auto.prediction$class, Auto_testing$mpg01)
mean(Auto.prediction$class == Auto_testing$mpg01)
Auto.qda <- qda(mpg01 ~d isplacement + weight + cylinders + year, data = Auto_training)
Auto.qda <- qda(mpg01 ~ displacement + weight + cylinders + year, data = Auto_training)
test.prediction <- predict(Auto.qda, Auto_testing)
table(test.prediction$class, Auto_testing$mpg01)
mean(test.prediction$class == Auto_testing$mpg01)
Auto.logreg <- glm(mpg01 ~ displacement + weight + cylinders + year, data = Auto_training, family = "binomial")
predicted.probs <- predict(Auto.logreg, Auto_testing, type = "response")
Auto.logreg <- glm(mpg01 ~ displacement + weight + cylinders + year, data = Auto_training, family = "binomial")
predicted.probs <- predict(Auto.logreg, Auto_testing, type = "response")
preds <- rep(0, dim(Auto_testing)[1])
preds[predicted.probs > 0.5] = 1
table(preds, Auto_testing)
table(preds, Auto_testing$mpg01)
mean(preds == Auto_testing$mpg01)
train.x2 <- cbind(Auto_training$displacement, Auto_training$weight, Auto_training$cylinders, Auto_training$year)
test.x2 <- cbind(Auto_testing$weight, Auto_testing$displacement, Auto_testing$cylinders, Auto_testing$year)
train.y2 <- cbind(Auto_training$mpg01)
knn.auto1 <- knn(train.x2, test.x2, train.y2, k=1 )
table(knn.auto1, Auto_testing$mpg01)
knn.auto10 <- knn(train.x2, test.x2, train.y2, k=10)
table(knn.auto10, Auto_testing$mpg01)
knn.auto20 <- knn(train.x2, test.x2, train.y2, k=20)
table(knn.auto20, Auto_testing$mpg01)
train.x2 <- cbind(Auto_training$displacement, Auto_training$weight, Auto_training$cylinders, Auto_training$year)
test.x2 <- cbind(Auto_testing$displacement, Auto_testing$weight, Auto_testing$cylinders, Auto_testing$year)
train.y2 <- cbind(Auto_training$mpg01)
knn.auto1 <- knn(train.x2, test.x2, train.y2, k=1 )
table(knn.auto1, Auto_testing$mpg01)
knn.auto10 <- knn(train.x2, test.x2, train.y2, k=10)
table(knn.auto10, Auto_testing$mpg01)
knn.auto20 <- knn(train.x2, test.x2, train.y2, k=20)
table(knn.auto20, Auto_testing$mpg01)
mean(knn.auto1 == Auto_testing$mpg01)
knn.auto10 <- knn(train.x2, test.x2, train.y2, k=10)
table(knn.auto10, Auto_testing$mpg01)
mean(knn.auto10 == Auto_testing$mpg01)
knn.auto20 <- knn(train.x2, test.x2, train.y2, k=20)
table(knn.auto20, Auto_testing$mpg01)
mean(knn.auto20 == Auto_testing$mpg01)
crim01 <- rep(0, lenght(crim))
crim01 <- rep(0, length(crim))
attach(Boston)
crim01 <- rep(0, length(crim))
crim01[crim > median(crim)] <- 1
Boston <- data.fram(Boston, crim01)
Boston <- data.frame(Boston, crim01)
test.b <- (length(crim)/2+1): length(crim)
train.b <- 1:(length(crim)/2)
Boston.train <- Bonston[train.b,]
Boston.train <- Boston[train.b,]
Boston.test <- Boston[test.b,]
crim01.test <- crim01[test]
crim01.test <- crim01[test.b]
glm.fit.b <- glm(crim01 ~ crim, data = Boston, family = binomial, subset = train.b)
summary(glm.fit.b)
glm.probs.b=predict(glm.fit.b, Boston.test, type = "response")
glm.pred.b <- rep(0, length(glm.probs.b))
glm.pred.b[glm.probs.b > 0.5] <- 1
table(glm.pred.b, crim01.test)
mean(glm.pred.b != crim01.test)
mean(glm.pred.b == crim01.test)
table(glm.pred.b, crim01.test)
summary(glm.fit.b)
glm.fit.b <- glm(crim01 ~ . - crim01 - crim, data = Boston, family = binomial, subset = train.b)
summary(glm.fit.b)
summary(glm.fit.b)
glm.probs.b=predict(glm.fit.b, Boston.test, type = "response")
glm.pred.b <- rep(0, length(glm.probs.b))
glm.pred.b[glm.probs.b > 0.5] <- 1
table(glm.pred.b, crim01.test)
mean(glm.pred.b == crim01.test)
mean(glm.pred.b != crim01.test)
lda.fit.b <- lda(crim01 ~ . - crim01 - crim, data = Boston, subset = train.b)
lda.pred.b <- predict(lda.fit.b, Boston.test)
table(lda.pred.b$class, crim01.test)
mean(lda.pred.b$class, != crim01.test)
mean(lda.pred.b$class != crim01.test)
view(Boston)
View(Boston)
View(Boston)
?Boston
train.x.b <- cbind(zn, indus, chas, nox, rm, age, dis, rad, tax, ptratio, black, lstat, medv)[train.b,]
test.x.b <- cbind(zn, indus, chas, nox, rm, age, dis, rad, tax, ptratio, black, lstat, medv)[test.b,]
train.crim01 <- crim01[train]
train.x.b <- cbind(zn, indus, chas, nox, rm, age, dis, rad, tax, ptratio, black, lstat, medv)[train.b,]
test.x.b <- cbind(zn, indus, chas, nox, rm, age, dis, rad, tax, ptratio, black, lstat, medv)[test.b,]
train.crim01 <- crim01[train.b]
set.seed(1)
knn.pred.b1 <- knn(train.x.b, test.x.b, train.crim01, k =1)
table(knn.pred.b1, crim01.test)
mean(knn.pred.b1 != crim01.test)
knn.pred.b10 <- knn(train.x.b, test.x.b, train.crim01, k = 10)
table(knn.pred.b10, crim01.test)
mean(knn.pred.b10 != crim01.test)
knn.pred.b20 <- knn(train.x.b, test.x.b, train.crim01, k = 20)
table(knn.pred.b20, crim01.test)
mean(knn.pred.b20 != crim01.test)
library(ISLR)
set.seed(1)
train=sample(392, 196)
head(train)
train <- sample(392, 196)
head(train)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
set.seed(1)
train <- sample(392, 196)
head(train)
lm.fit <- lm(mpg~horsepower, data = Auto, subset = train)
attach(auto)
attach(Auto)
mean((mpg~predict(lm.fit,Auto))[-train]^2)
mean((mpg-predict(lm.fit,Auto))[-train]^2)
lm.fit2 <- lm(mpg-poly(horsepower, 2), data = Auto, subset = train))
lm.fit2 <- lm(mpg~poly(horsepower, 2), data = Auto, subset = train))
lm.fit2 <- lm(mpg~poly(horsepower, 2), data = Auto, subset = train)
mean(mpg-predict(lm.fit2,))
mean((mpg-predict(lm.fit2,Auto))[-train]^2)
lm.fit3 <- lm(mpg~poly(horsepower, 3), data = Auto, subset = train)
mean((mpg-predict(lm.fit2,Auto))[-train]^3)
mean((mpg-predict(lm.fit3,Auto))[-train]^3)
mean((mpg-predict(lm.fit3,Auto))[-train]^2)
mean((mpg-predict(lm.fit2,Auto))[-train]^2)
mean((mpg-predict(lm.fit3,Auto))[-train]^2)
glm.fit <- glm(mpg~horsepower, data=Auto)
coef(glm.fit)
lm.fit=lm(mpg~horsepower, data=Auto)
coef(lm.fit)
library(boot)
cv.err <- cv.glm(Auto,glm.fit)
cv.err$delta
cv.error <- rep(0,5)
cv.error <- rep(0,5)
for (i in 1:5){
glm.fit <- glm(mpg~poly(horsepower, i), data=Auto)
cv.error[i] <- cv.glm(Auto, glm.fit)$delta[1]
}
cv.error
set.seed(17)
cv.error.10 <- rep(0,10)
for (i in 1:10){
glm.fit <- glm(mpg~poly(horsepower, i), data=Auto)
cv.error.10[i] <- cv.glm(Auto, glm.fit, K=10)$delta[1]
}
cv.error.10
