}
detach(dataset)
}
# DO NOT CHANGE THIS CODE!
TestHomogeneity(chickwts, feed, weight)
TestNormality(chickwts, feed, weight)
summary(
sales.model <- aov(sales1000~location, data=sales.data)
)
PostHocTest(sales.model, method="hsd", conf.level=NA, ordered=FALSE)
summary(
sales.model <- aov(weight~feed, data=chickwts)
)
PostHocTest(sales.model, method="hsd", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="scheffe", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="scheffe", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="hsd", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="bonferroni", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="scheffe", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="hsd", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="bonferroni", conf.level=NA, ordered=FALSE)
PostHocTest(sales.model, method="newmankeuls", conf.level=NA, ordered=FALSE)
library(tidyverse)
cluster.data <- read.table(header=TRUE, text=’
subject courseno  repeatno  enrolled
ANT     2053.B5A  1         37
ANT     3513.001  1         74
ANT     2023.003  2         66
ANT     3883.001  2         58
CSM     2143.901  1         34
CSM     4713.903  1         14
CSM     2113.901  2         121
CSM     4643.901  2         34’)
cluster.data %>%
group_by(., subject, repeatno) %>%
summarize(., mean.enr=mean(enrolled), var.enr=var(enrolled), n=n()) %>%
print.data.frame(., digits=3)
cluster.data <- read.table(header=TRUE, text=’
subject courseno  repeatno  enrolled
ANT     2053.B5A  1         37
ANT     3513.001  1         74
ANT     2023.003  2         66
ANT     3883.001  2         58
CSM     2143.901  1         34
CSM     4713.903  1         14
CSM     2113.901  2         121
CSM     4643.901  2         34
’)
cluster.data <- read.table(header=TRUE, text=’
subject courseno  repeatno  enrolled
ANT     2053.B5A  1         37
ANT     3513.001  1         74
ANT     2023.003  2         66
ANT     3883.001  2         58
CSM     2143.901  1         34
CSM     4713.903  1         14
CSM     2113.901  2         121
CSM     4643.901  2         34
’)
cluster.data <- read.table(header=TRUE, text='
subject courseno  repeatno  enrolled
ANT     2053.B5A  1         37
ANT     3513.001  1         74
ANT     2023.003  2         66
ANT     3883.001  2         58
CSM     2143.901  1         34
CSM     4713.903  1         14
CSM     2113.901  2         121
CSM     4643.901  2         34
')
cluster.data <- read.table(header=TRUE, text='
subject courseno  repeatno  enrolled
AHC     1113.001  1         105
AHC     1123.007  1         67
AHC     1133.002  2         104
AHC     4333.003  2         55
FIN     3013.004  1         178
FIN     3313.002  1         67
FIN     3433.001  2         73
FIN     4873.002  2         25
MAT     1043.04A  1         39
MAT     1073.01A  1         73
MAT     2214.003  2         31
MAT     3613.001  2         34
PHI     2043.001  1         56
PHI     3013.001  1         65
PHI     3213.004  2         59
PHI     3343.001  2         13
SOC     1013.04A  1         199
SOC     3223.002  1         73
SOC     4023.002  2         200
SOC     4863.001  2         38
')
cluster.data %>%
group_by(., subject, repeatno) %>%
summarize(., mean.enr=mean(enrolled), var.enr=var(enrolled), n=n()) %>%
print.data.frame(., digits=3)
mean.enr<-c(86, 79.5, 122.5, 49, 56, 32.5, 60.4, 36, 136, 119)
t.test(mean.enr, conf.level = 0.95)$conf.int
library(tidyverse)
cluster.data <- read.table(header=TRUE, text='
subject courseno  repeatno  enrolled
AHC     1113.001  1         105
AHC     1123.007  1         67
AHC     1133.002  2         104
AHC     4333.003  2         55
FIN     3013.004  1         178
FIN     3313.002  1         67
FIN     3433.001  2         73
FIN     4873.002  2         25
MAT     1043.04A  1         39
MAT     1073.01A  1         73
MAT     2214.003  2         31
MAT     3613.001  2         34
PHI     2043.001  1         56
PHI     3013.001  1         65
PHI     3213.004  2         59
PHI     3343.001  2         13
SOC     1013.04A  1         199
SOC     3223.002  1         73
SOC     4023.002  2         200
SOC     4863.001  2         38
')
cluster.data %>%
group_by(., subject, repeatno) %>%
summarize(., mean.enr=mean(enrolled), var.enr=var(enrolled), n=n()) %>%
print.data.frame(., digits=3)
mean.enr<-c(86, 79.5, 122.5, 49, 56, 32.5, 60.4, 36, 136, 119)
t.test(mean.enr, conf.level = 0.95)$conf.int
t.test(mean.enr, conf.level = 0.95)$conf.int
?t.test
installed.packages(c("nycflights13", "gapminder", "Lahman"))
installed.packages(c("nycflights13", "gapminder", "Lahman"))
library(tidyverse)
library(Lahman)
installed.packages(c("nycflights13", "gapminder", "Lahman"))
install.packages(c("Lahman", "gapminder", "nycflights13"))
install.packages("ISLR")
install.packages("installr")
library(installr)
install.packages("installr")
library(installr)
updateR()
install.packages("installr")
library(installr)
updateR()
library(ISLR)
read.csv()
read.csv(College)
read.csv(College.csv)
read.csv(college.csv)
read.csv(college)
for(i in 1:nrow(team_sub)){
print(paste0("Your group number is ", your_group," and your teammates' e-mails are ",
team_sub[i,4], "@my.utsa.edu"))
}
#### Run This Code to Find Your Group Members
#Bring in student list
stu<-read.csv("https://raw.githubusercontent.com/mattdemography/STA_6233_Spring2021/main/Data/abc123_list.csv", header=F)
View(stu)
View(stu)
#Here we will bring in raw data. I like putting all my libraries at the start of my code. You can place them as you go as well.
library(data.table)
#If you don't have a library installed you will have to install them via the code below or through the 'Packages' tab
install.packages("data.table")
library(data.table) #Now you can reload the library and shouldn't get an error
#We create an object to hold the url. This can be done in one line, but this helps see what's happening.
url<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
#### Importing Files ####
#Now download the file
download.file(url, destfile = "cameras.csv")
url<-"https://raw.githubusercontent.com/mattdemography/STA_6233_Spring2021/main/Data/nic-cage.csv"
#### Importing Files ####
#Now download the file
download.file(url, destfile = "cage.csv")
list.files()
#### Importing Files ####
#Now download the file
download.file(url, destfile = "C:/Users/apesi/Documents/cage.csv")
#Now that the file has been downloaded we can read it into R
#Read.csv
dat_csv<-read.csv("C:/Users/apesin/Documents/cage.csv")
#Now that the file has been downloaded we can read it into R
#Read.csv
dat_csv<-read.csv("C:/Users/apesi/Documents/cage.csv")
?read.csv
#Now that the file has been downloaded we can read it into R
#Read.csv
dat_csv<-read.csv("C:/Users/apesi/Documents/cage.csv", header=F)
#Now that the file has been downloaded we can read it into R
#Read.csv
dat_csv<-read.csv("C:/Users/apesi/Documents/cage.csv", header=T)
#dat_csv<-read.csv("./Documents/cameras.csv")
#Read.table
dat_table<-read.table("C:/Users/apesi/Documents/cage.csv", sep=",")
#dat_csv<-read.csv("./Documents/cameras.csv")
#Read.table
dat_table<-data.table("C:/Users/apesi/Documents/cage.csv", sep=",")
#What are in our data?
head(dt)
#Take cage data frame and make it a data table
str(dat_csv)
dt<-data.table(dat_csv)
str(dt)
#What are in our data?
head(dt)
tail (dt)
names(dt)
#Count Number of Rows/Observations
nrow(dat_table)
#Count Number of Rows/Observations
nrow(dt)
#percent of voice actor movie
table(dt%voice)
#percent of voice actor movie
table(dt$voice)
#percent of voice actor movie
table(dt$Voice)
table(dt$Rating)
#percent of voice actor movie
(table(dt$Voice) [2]/nrow(dt))*100
#Count Number of Columns
length(dt)
#Read Specific Rows
dt[1,]
#How Would I capture more than one row?
dt[1:5]
dt[c(1,2,3,4)]
dt[c(90,5,8)]
#How would I capture more than one column?
dt[50:60,c(6,3)]
#How would I capture more than one column?
dt[c(50:60,3),c(6,3)]
#How would I capture more than one column?
new_dt <- dt[c(50:60,3),c(6,3)]
head(new_dt)
tail(new_dt)
#Now answer the following questions using the file 'SampleMattData' found in the course Github repository.
sample <- https://raw.githubusercontent.com/mattdemography/STA_6233_Spring2021/main/Data/SampleMattData.csv
#Now answer the following questions using the file 'SampleMattData' found in the course Github repository.
sample <- "https://raw.githubusercontent.com/mattdemography/STA_6233_Spring2021/main/Data/SampleMattData.csv"
download.file(url, destfile = "C:/Users/apesi/Documents/sample.csv")
#Note add ?raw=true to the end of the link to get the proper file
#How many rows?
nrows(sample)
#Note add ?raw=true to the end of the link to get the proper file
#How many rows?
nrow(sample)
download.file(sample, destfile = "C:/Users/apesi/Documents/sample.csv")
#Note add ?raw=true to the end of the link to get the proper file
#How many rows?
nrow(sample)
#Now answer the following questions using the file 'SampleMattData' found in the course Github repository.
sample <- "https://raw.githubusercontent.com/mattdemography/STA_6233_Spring2021/main/Data/SampleMattData.csv?raw=true"
download.file(sample, destfile = "C:/Users/apesi/Documents/sample.csv")
#Note add ?raw=true to the end of the link to get the proper file
#How many rows?
nrow(sample)
#How many columns?
length(sample)
#Note add ?raw=true to the end of the link to get the proper file
dat_sam <- read.csv(sample)
View(dat_sam)
#How many columns?
length(dat_sam)
#How many rows?
nrow(dat_sam)
#What are the names of the variables in the file?
names(dat_sam)
#What is the response to the 10th column by the 20th through 25th respondent?
dat_sam[10,c(20:25)]
ds <-data.table(dat_sam)
#How many rows?
nrow(ds)
#How many columns?
length(ds)
#What are the names of the variables in the file?
names(ds)
#What is the response to the 10th column by the 20th through 25th respondent?
ds[10,c(20:25)]
#What is the response to the 10th column by the 20th through 25th respondent?
ds[c(20:25),10]
#### Subsetting ####
#Let's limit our example data to the first three columns.
ex_sub<-ds[,1:3]
table(ex_sub[,2])
ex_sub1<-subset(ex_sub, ex_sub$My.district.supports.me.to.take.risks.and.try.new.things=="Agree")
nrow(ex_sub1)
#Now Create a subset using a randomization funciton in dplyr
ex_random<-sample_n(ds, 400, replace=F)
#Now Create a subset using a randomization funciton in dplyr
library(dplyr)
ex_random<-sample_n(ds, 400, replace=F)
#What is the first row of this new dataset?
ex_random[1,]
#### Changing Variables ####
#I don't like those long column names - Let's change this
library(plyr)
install.packages(plyr)
ex_sub1<-plyr::rename(ex_sub1, c(My.district.supports.me.to.take.risks.and.try.new.things="new_things",
I.would.recommend.this.school.district.to.friends.as.a.great.place.to.work="recommend"))
names(ex_sub1)
#Another Way
ex_sub1<-subset(ex_sub, ex_sub$My.district.supports.me.to.take.risks.and.try.new.things=="Agree")
names(ex_sub1)
ex_sub1<-ex_sub1 %>% dplyr::rename(new_things=2, recommend=3)
names(ex_sub1)
#Okay Now I want to make two categories one that is agree and the other that is disagree for the 'recommend' variable
table(ex_sub1$recommend)
ex_sub1$newvar<-ifelse(ex_sub1$recommend=="Somewhat Agree", "Agree", ex_sub1$recommend)
table(ex_sub1$newvar)
table(ex_sub1$newvar)
ex_sub1$newvar<-ifelse(ex_sub1$recommend=="Somewhat Agree", "Agree", ex_sub1$recommend)
table(ex_sub1$newvar)
ex_sub1$newvar<-ifelse(ex_sub1$recommend=="Somewhat Agree" | ex_sub1$recommend=="Strongly Agree", "Agree",
ifelse(ex_sub1$recommend=="Strongly Disagree", "Disagree", ex_sub1$recommend))
table(ex_sub1$newvar)
ex_sub1$newvar<-ifelse(ex_sub1$recommend=="Somewhat Agree" | ex_sub1$recommend=="Strongly Agree", "Agree",
ifelse(ex_sub1$recommend=="Strongly Disagree" | ex_sub1$recommend=="Somewhat Disagree" "Disagree", ex_sub1$recommend))
ex_sub1$newvar<-ifelse(ex_sub1$recommend=="Somewhat Agree" | ex_sub1$recommend=="Strongly Agree", "Agree",
ifelse(ex_sub1$recommend=="Strongly Disagree" | ex_sub1$recommend=="Somewhat Disagree" "Disagre"))
ex_sub1$newvar<-ifelse(ex_sub1$recommend=="Somewhat Agree" | ex_sub1$recommend=="Strongly Agree", "Agree",
ifelse(ex_sub1$recommend=="Strongly Disagree" | ex_sub1$recommend=="Somewhat Disagree", "Disagre"))
ex_sub1$newvar<-ifelse(ex_sub1$recommend=="Somewhat Agree" | ex_sub1$recommend=="Strongly Agree", "Agree",
ifelse(ex_sub1$recommend=="Strongly Disagree" | ex_sub1$recommend=="Somewhat Disagree", "Disagree", ex_sub1$recommend))
table(ex_sub1$newvar)
ex_sub1[ , newvar_dt := ifelse(ex_sub1$recommend=="Somewhat Agree" | ex_sub1$recommend=="Strongly Agree", "Agree",
ifelse(ex_sub1$recommend=="Strongly Disagree" | ex_sub1$recommend=="Somewhat Disagree", "Disagree", ex_sub1$recommend))]
table(ex_sub1$newvar)
table(ex_sub1$newvar_dt)
#Let's look at the system read times to see why one may want to use data.table and not read.csv
big_df <- data.frame(x=rnorm(1E6), y=rnorm(1E6))
#Let's look at the system read times to see why one may want to use data.table and not read.csv
big_df <- data.frame(x=rnorm(1E7), y=rnorm(1E7))
file <- tempfile()
write.table(big_df, file=file, row.names=FALSE, col.names=TRUE,
sep="\t", quote=FALSE)
#Let's look at the system read times to see why one may want to use data.table and not read.csv
big_df <- data.frame(x=rnorm(1E6), y=rnorm(1E6))
file <- tempfile()
write.table(big_df, file=file, row.names=FALSE, col.names=TRUE,
sep="\t", quote=FALSE)
system.time(fread(file))
system.time(read.csv(file))
#Let's create some data to show the functionality of data.table
#Set size of dataset
size<-20000
#Years<-sample(c(2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019), size, replace=T)
Years<-sample(c("2011", "2012", "2013", "2014", 2015, 2016, 2017, 2018, 2019), size, replace=T)
Months<-sample(c("January", "February", "March", "April", "May", "June", "July",
"August", "September", "October", "November", "December"), size, replace=T)
Orgs<-sample(c("Tri West", "Tri South", "Texas Best", "Helping Here", "Silver and Black Give Back",
"Mike's Tots", "Purple Cross"), size, replace=T)
Region<-sample(c("South", "West", "North", "East"), size, replace=T)
Cost<-sample(100:100000, size, replace=T)
df<-data.frame(Orgs=Orgs, Months=Months, Region=Region, Years=Years, Cost=Cost)
dt<-data.table(Orgs=Orgs, Months=Months, Region=Region, Years=Years, Cost=Cost)
#Subset the data table
dtm<-dt[dt$Months=="March",]
table(dtm$Months)
#Rows
dt[c(2,3)]
#Columns
dt[,c(2,3)]
#Calculating values for variables with expressions
sumstats<-dt[,list(mean(Cost), sum(Cost))]
sumstats
#Creating New Columns
dt[,newvar:=Cost/2]
summary(dt$cost)
summary(dt$Cost)
#Let's create some data to show the functionality of data.table
#Set size of dataset
set.seed(100)
sumstats
#Calculating values for variables with expressions
sumstats<-dt[,list(mean(Cost), sum(Cost))]
sumstats
size<-20000
#Years<-sample(c(2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019), size, replace=T)
Years<-sample(c("2011", "2012", "2013", "2014", 2015, 2016, 2017, 2018, 2019), size, replace=T)
Months<-sample(c("January", "February", "March", "April", "May", "June", "July",
"August", "September", "October", "November", "December"), size, replace=T)
Orgs<-sample(c("Tri West", "Tri South", "Texas Best", "Helping Here", "Silver and Black Give Back",
"Mike's Tots", "Purple Cross"), size, replace=T)
Region<-sample(c("South", "West", "North", "East"), size, replace=T)
Cost<-sample(100:100000, size, replace=T)
df<-data.frame(Orgs=Orgs, Months=Months, Region=Region, Years=Years, Cost=Cost)
dt<-data.table(Orgs=Orgs, Months=Months, Region=Region, Years=Years, Cost=Cost)
#Subset the data table
dtm<-dt[dt$Months=="March",]
table(dtm$Months)
#Rows
dt[c(2,3)]
#Columns
dt[,c(2,3)]
#Calculating values for variables with expressions
sumstats<-dt[,list(mean(Cost), sum(Cost))]
sumstats
#Creating New Columns
dt[,newvar:=Cost/2]
summary(dt$Cost)
#### Run This Code to Find Your Group Members
#Bring in student list
stu<-read.csv("https://raw.githubusercontent.com/mattdemography/STA_6233_Spring2021/main/Data/abc123_list.csv", header=F)
set.seed(134)
s<-sample(1:33, 33, replace=F)
teams<-as.data.frame(s)
teams$rownum<-as.numeric(rownames(teams))
teams$GroupNum<-ifelse(teams$rownum<=4, 1, ifelse(teams$rownum<=8 & teams$rownum>4, 2,
ifelse(teams$rownum<=12 & teams$rownum>8, 3, ifelse(teams$rownum<=16 & teams$rownum>12, 4,
ifelse(teams$rownum<=20 & teams$rownum>16, 5, ifelse(teams$rownum<=24 & teams$rownum>20, 6,
ifelse(teams$rownum<=28 & teams$rownum>24, 7, 8)))))))
#Merge with Student abc123 Data
teams<-merge(teams, stu, by.x="s", by.y="V1")
teams$rownum<-as.numeric(rownames(teams))
teams$GroupNum<-ifelse(teams$rownum<=4, 1, ifelse(teams$rownum<=8 & teams$rownum>4, 2,
ifelse(teams$rownum<=12 & teams$rownum>8, 3, ifelse(teams$rownum<=16 & teams$rownum>12, 4,
ifelse(teams$rownum<=20 & teams$rownum>16, 5, ifelse(teams$rownum<=24 & teams$rownum>20, 6,
ifelse(teams$rownum<=28 & teams$rownum>24, 7, 8)))))))
#Merge with Student abc123 Data
teams<-merge(teams, stu, by.x="s", by.y="V1")
#### Run This Code to Find Your Group Members
#Bring in student list
stu<-read.csv("https://raw.githubusercontent.com/mattdemography/STA_6233_Spring2021/main/Data/abc123_list.csv", header=F)
#Insert Your Number Here
your_num<-12
set.seed(134)
s<-sample(1:33, 33, replace=F)
teams<-as.data.frame(s)
teams$rownum<-as.numeric(rownames(teams))
teams$GroupNum<-ifelse(teams$rownum<=4, 1, ifelse(teams$rownum<=8 & teams$rownum>4, 2,
ifelse(teams$rownum<=12 & teams$rownum>8, 3, ifelse(teams$rownum<=16 & teams$rownum>12, 4,
ifelse(teams$rownum<=20 & teams$rownum>16, 5, ifelse(teams$rownum<=24 & teams$rownum>20, 6,
ifelse(teams$rownum<=28 & teams$rownum>24, 7, 8)))))))
#Merge with Student abc123 Data
teams<-merge(teams, stu, by.x="s", by.y="V1")
#Find Your Teammates
your_group<-subset(teams, teams$s==your_num)
your_group<-as.numeric(your_group[3])
team_sub<-subset(teams, teams$GroupNum==your_group) #Creating Subset of just your teammates
team_sub<-subset(team_sub, team_sub$s!=your_num)
for(i in 1:nrow(team_sub)){
print(paste0("Your group number is ", your_group," and your teammates' e-mails are ",
team_sub[i,4], "@my.utsa.edu"))
}
library(MASS)
attach(Boston)
View(Boston)
fit<-lm(crim~.,data=Boston)
summary(fit)
library(ISLR)
data("College")
college<-read.csv("College.csv")
college <- read.csv("College.csv")
college <- read.csv("College.csv")
library(ISLR)
data(College)
college <- read.csv("College.csv")
library(ISLR)
data(College)
college <- read.csv("College.csv")
force(College)
auto=read.table("Auto.data")
college <- read.csv("College.csv")
college <- read.csv("College.csv", header=T)
"Auto.data" %in% list.files()
library(ISLR)
auto_df = ISLR::College
auto_df = ISLR::Auto
View(auto_df)
View(auto_df)
View(College)
View(College)
head(college[, 1:4])
college <- read.csv("College.csv", header=T)
library(ISLR)
Auto=read.table("Auto.data")
library(ISLR)
data(College)
college <- read.csv("College.csv", header=T)
College <- read.csv("College.csv", header=T)
College <- read.csv("college.csv", header=T)
library(ISLR)
data(College)
college <- read.csv("College.csv")
setwd("C:/Users/apesi/Desktop/Spring 2021/Data Mining/ISLR Data")
college <-read.csv("College.csv")
head(college[, 1:5])
rownmes(college)=college[,1]
rownames(college)=college[,1]
fix(college)
View(college)
View(college)
View(College)
View(College)
summary(college)
pairs(college[, 1:10])
pairs(college[, 1:10])
college <- college[,-1]
fix(college)
summary(college)
pairs(college[, 1:10])
pairs(college[, 1:10])
college <- college [,-1]
pairs(college[, 1:10])
plot(college$Private, college$Outstate,
xlab = "Private University", ylab ="Out of State tuition in USD",
main = "Outstate Tuition Plot")
whichgit
which git
which git
