qda.class <- predict(qda.fit, Smarket.2005)$class
table (qda.class, Direction.2005)
mean(qda.class==Direction.2005)
library(class)
train.x <- cbind(Lag1, Lag2)[train,]
test.x <- cbind(Lag1, Lag2)[!train,]
train.Direction <- Direction[train]
dim(train.x)
dim(test.x)
dim(train.Direction)
length(train.Direction)
set.see(1)
set.seed(1)
knn.pred <- knn(train.x, test.x, train.Direction, k=1)
table(knn.pred, Direction.2005)
table(knn.pred, Direction.2005)
knn.pred <- knn(train.x, test.x, train.Direction, k=3)
table(knn.pred, Direction.2005)
table(knn.pred, Direction.2005)
knn.pred <- knn(train.x, test.x, train.Direction, k=10)
table(knn.pred, Direction.2005)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
library(class)
attach(Weekly)
attach(Weekly)
attach(Weekly)
attach(Boston)
?Boston
library(tidyverse)
attach(Boston)
names(Smarket)
pairs(Smarket)
pairs(Weekly)
pairs(Weekly)
cor(Weekly)
cor(Weekly[,-9])
plot(Weekly)
names(Weekly)
plot(Volume)
?Volume
?Weekly
cor(Weekly[,-9])
install.packages("corrplot")
library(corrplot)
corrplot(Weekly)
corrplot((cor(Weekly[,-9]))
corrplot((cor(Weekly[,-9])))
corrplot(cor(Weekly[,-9]))
corrplot(cor(Weekly[,-9]), method = "Square")
corrplot(cor(Weekly[,-9]), method = "square")
names(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
corrplot(cor(Weekly[,-9]), method = "square")
?glm.fit
glm.fit <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family = binomial)
summary(glm.fit)
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
contrasts(Direction)
glm.pred=rep("Down", 1250)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
?table
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
contrasts(Direction)
glm.pred <- rep("Down", 1250)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
#Probability stock market goes up or down
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
contrasts(Direction)
glm.pred=rep("Down", 1250)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
glm.pred <- rep("Down", 10)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
#glm.probs[1:10]
glm.probs
glm.pred <- rep("Down")
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
glm.probs[1:10]
table(glm.pred, Direction)
glm.pred <- rep("Down", 10)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
glm.pred <- rep("Down", 100)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
length(glm.probs)
glm.pred <- rep("Down", 1089)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
train <-(Year %in% (>= 1990, <=2008))
?Weekly
training <- (Year <= 2008)
Weekly.09 <- Weekly[!train,]
dim(Weekly.09)
Weekly.08 <- Weekly[!train,]
Weekly.08 <- Weekly[!training,]
Direction.08 <-Direction[!training]
table(Direction.08)
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, family = "binomial")
weekly.probs <- predict(Weekly.fit, type = "response")
weekly.probs[1:10]
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, family = "binomial")
weekly.probs <- predict(Weekly.fit, type = "response")
weekly.pred <- rep("Down")
weekly.pred[weekly.probs > 0.5]="Up"
table(weekly.pred)
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, family = "binomial")
weekly.probs <- predict(Weekly.fit, type = "response")
weekly.pred <- rep("Down", length(weekly.prob))
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, family = "binomial")
weekly.probs <- predict(Weekly.fit, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
table(weekly.pred)
table(weekly.pred, Direction)
mean(weekly.pred == Direction)
(33+579)/(33+26+451+579)
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
weekly.probs <- predict(Weekly.fit, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
table(weekly.pred, Direction)
mean(weekly.pred == Direction)
length(weekly.pred)
length(Direction)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
library(class)
library(tidyverse)
library(corrplot)
attach(Weekly)
names(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
corrplot(cor(Weekly[,-9]), method = "square")
glm.fit <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family = binomial)
summary(glm.fit)
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
#glm.probs
contrasts(Direction)
glm.pred <- rep("Down", 1089)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
weekly.probs <- predict(Weekly.fit, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
table(weekly.pred, Direction)
length(Direction)
Direction.08 <- Direction[!training]
table(weekly.pred, Direction)
table(weekly.pred, Direction.08)
train = (Year<2009)
Weekly.0910 <-Weekly[!train,]
Weekly.fit<-glm(Direction~Lag2, data=Weekly,family=binomial, subset=train)
logWeekly.prob= predict(Weekly.fit, Weekly.0910, type = "response")
logWeekly.pred = rep("Down", length(logWeekly.prob))
logWeekly.pred[logWeekly.prob > 0.5] = "Up"
Direction.0910 = Direction[!train]
table(logWeekly.pred, Direction.0910)
weekly.probs <- predict(Weekly.fit, weekly.08, type = "response")
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
weekly.probs <- predict(Weekly.fit, weekly.08, type = "response")
weekly.probs <- predict(Weekly.fit, Weekly.08, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
Direction.08 <- Direction[!training]
table(weekly.pred, Direction.08)
mean(weekly.pred == Direction)
```{r getdata}
library(ISLR)
library(MASS)
library(class)
library(tidyverse)
library(corrplot)
attach(Weekly)
names(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
corrplot(cor(Weekly[,-9]), method = "square")
glm.fit <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family = binomial)
summary(glm.fit)
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
#glm.probs
contrasts(Direction)
glm.pred <- rep("Down", 1089)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
weekly.probs <- predict(Weekly.fit, Weekly.08, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
Direction.08 <- Direction[!training]
table(weekly.pred, Direction.08)
mean(weekly.pred == Direction)
(9+56)/(9+56+5+34)
mean(weekly.pred == Direction.08)
lda.fit <- (Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
lda.fit <- lda(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
lda.pred <- predict(lda.fit, Weekly.08)
names(lda.pred)
lda.class <- lda.pred$class
table(lda.class, Direction.08)
mean(lda.class==Direction.08)
sum(lda.pred$posterior[,1]>0.9)
mean(lda.class==Direction.08)
sum(lda.pred$posterior[,1]>0.9)
lda.pred <- predict(lda.fit, Weekly.08)
lda.fit <- lda(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
lda.pred <- predict(lda.fit, Weekly.08)
lda.class <- lda.pred$class
table(lda.class, Direction.08)
mean(lda.class==Direction.08)
qda.fit <- qda(Direction ~ Lag2, data = Weekly, subset = training)
qda.fit
qda.fit <- qda(Direction ~ Lag2, data = Weekly, subset = training)
qda.fit
qda.class <- predict(qda.fit, Weekly.08)$class
table (qda.class, Direction.08)
mean(qda.class==Direction.08)
train.weekly <- cbind(Lag2)[training,]
test.weekly <- cbind(Lag2)[!training,]
train.Direction <- Direction[training]
dim(train.weekly)
dim(test.weekly)
length(train.Direction)
set.seed(1)
knn.pred <- knn(train.weekly, test.weekly, train.Direction, k=1)
dim(train.weekly)
train.weekly <- as.matrix(Lag2)[training,]
dim(train.weekly)
test.weekly <- as.matrix(Lag2)[!training,]
train.Direction <- Direction[training]
dim(train.weekly)
train.weekly <- as.matrix(Lag2)[training]
test.weekly <- as.matrix(Lag2)[!training]
train.Direction <- Direction[training]
dim(train.weekly)
Week.train=as.matrix(Lag2[train])
Week.test=as.matrix(Lag2[!train])
Week.train=as.matrix(Lag2[training])
Week.test=as.matrix(Lag2[!training])
train.Direction =Direction[training]
set.seed(1)
Weekknn.pred=knn(Week.train,Week.test,train.Direction,k=1)
table(Weekknn.pred,Direction.0910)
table(Weekknn.pred,Direction.08)
train.weekly <- as.matrix(Lag2)[training]
test.weekly <- as.matrix(Lag2)[!training]
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(train.weekly, test.weekly, train.Direction, k=1)
knn.pred <- knn(train.weekly, test.weekly, train.Direction, k=1)
train.week <- as.matrix(Lag2)[training]
test.week <- as.matrix(Lag2)[!training]
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(train.week, test.week, train.Direction, k=1)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(MASS)
library(class)
library(tidyverse)
library(corrplot)
attach(Weekly)
names(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
corrplot(cor(Weekly[,-9]), method = "square")
glm.fit <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family = binomial)
summary(glm.fit)
glm.probs <- predict(glm.fit, type='response')
glm.probs[1:10]
#glm.probs
contrasts(Direction)
glm.pred <- rep("Down", 1089)
glm.pred[glm.probs > 0.5]="Up"
table(glm.pred, Direction)
training <- (Year <= 2008)
Weekly.08 <- Weekly[!training,]
Weekly.fit <- glm(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
weekly.probs <- predict(Weekly.fit, Weekly.08, type = "response")
weekly.pred <- rep("Down", length(weekly.probs))
weekly.pred[weekly.probs > 0.5]="Up"
Direction.08 <- Direction[!training]
table(weekly.pred, Direction.08)
mean(weekly.pred == Direction.08)
lda.fit <- lda(Direction ~ Lag2, data = Weekly, subset = training, family = "binomial")
lda.pred <- predict(lda.fit, Weekly.08)
lda.class <- lda.pred$class
table(lda.class, Direction.08)
mean(lda.class==Direction.08)
qda.fit <- qda(Direction ~ Lag2, data = Weekly, subset = training)
qda.fit
qda.class <- predict(qda.fit, Weekly.08)$class
table (qda.class, Direction.08)
mean(qda.class==Direction.08)
train.week <- as.matrix(Lag2)[training]
test.week <- as.matrix(Lag2)[!training]
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(train.week, test.week, train.Direction, k=1)
Week.train=as.matrix(Lag2[training])
weekly.training <- as.matrix(Lag2)[training]
weekly.test <- as.matrix(Lag2)[!training]
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(weekly.training, weekly.test, train.Direction, k=1)
weekly.training = as.matrix(Lag2)[training]
weekly.test = as.matrix(Lag2)[!training]
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(weekly.training, weekly.test, train.Direction, k=1)
weekly.training <- as.matrix(Lag2[training])
weekly.test <- as.matrix(Lag2[!training])
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(weekly.training, weekly.test, train.Direction, k=1)
table(knn.pred, Direction.08)
mean(knn.pred == Direction.08)
qda.fit2 <- qda(Direction ~ Lag1 + Lag2 + Lag5, data = Weekly, subset = training)
qda.fit2
qda.class2 <- predict(qda.fit2, Weekly.08)$class
table (qda.class2, Direction.08)
mean(qda.class2==Direction.08)
lda.fit2 <- lda(Direction ~ Lag1 + Lag2 + Lag5, data = Weekly, subset = training, family = "binomial")
lda.pred2 <- predict(lda.fit2, Weekly.08)
lda.class2 <- lda.pred2$class
table(lda.class2, Direction.08)
mean(lda.class2==Direction.08)
weekly.training2 <- cbind(Lag1, Lag2, Lag5)[training]
weekly.test2 <- cbind(Lag1, Lag2, Lag5)[!training]
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
weekly.training2 <- cbind(Lag1, Lag2, Lag5[training])
weekly.test2 <- cbind(Lag1, Lag2, Lag5[!training])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
length(weekly.training2)
length(weekly.test2)
length(train.Direction2)
weekly.training <- as.matrix(Lag2[training])
weekly.test <- as.matrix(Lag2[!training])
train.Direction <- Direction[training]
set.seed(1)
knn.pred <- knn(weekly.training, weekly.test, train.Direction, k=1)
table(knn.pred, Direction.08)
mean(knn.pred == Direction.08)
weekly.training2 <- cbind(Lag1, Lag2, Lag5)[training]
weekly.test2 <- cbind(Lag1, Lag2, Lag5)[!training]
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5)[!training])
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5[!training])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5[!training])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred <- knn(weekly.training, weekly.test, train.Direction, k=1)
table(knn.pred, Direction.08)
mean(knn.pred == Direction.08)
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5[!training])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
weekly.training2 <- data.frame(Lag1, Lag2, Lag5[training])
weekly.training2 <- as.data.frame(Lag1, Lag2, Lag5[training])
weekly.test2 <- as.data.frame(Lag1, Lag2, Lag5[!training])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training,])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5[!training,])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training,])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5[!training,])
train.Direction2 <- Direction[training,]
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training,])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5[!training,])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=1)
weekly.training2 <- as.matrix(Lag1, Lag2, Lag5[training,])
weekly.test2 <- as.matrix(Lag1, Lag2, Lag5[!training,])
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
weekly.training2 <- cbind(Lag1, Lag2, Lag5)[training,]
weekly.test2 <- cbind(Lag1, Lag2, Lag5)[!training,]
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
table(knn.pred2, Direction.08)
mean(knn.pred2 == Direction.08)
knn.pred3 <- knn(weekly.training2, weekly.test2, train.Direction2, k=100)
table(knn.pred3, Direction.08)
mean(knn.pred3 == Direction.08)
weekly.training2 <- cbind(Lag1, Lag2, Lag5)[training,]
weekly.test2 <- cbind(Lag1, Lag2, Lag5)[!training,]
train.Direction2 <- Direction[training]
set.seed(1)
knn.pred1 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
table(knn.pred1, Direction.08)
mean(knn.pred1 == Direction.08)
knn.pred2 <- knn(weekly.training2, weekly.test2, train.Direction2, k=10)
table(knn.pred2, Direction.08)
mean(knn.pred2 == Direction.08)
knn.pred3 <- knn(weekly.training2, weekly.test2, train.Direction2, k=100)
table(knn.pred3, Direction.08)
mean(knn.pred3 == Direction.08)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] <- 1
attach(Auto)
mpg01 <- rep(0, length(mpg))
mpg01[mpg > median(mpg)] <- 1
Auto = data.frame(Auto, mpg01)
summary(Auto)
head(Auto)
summary(Auto)
corrplot(cor(Auto), method = "square")
str(Auto)
str(Auto)
corrplot(cor(Auto[,-9]), method = "square")
train <- sample(1:dim(Auto), [1], size = dim(Auto [1]*0.75))
train <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
autotraining <- auto[train,]
autotraining <- Auto[train,]
autotest <- Auto[-train]
lda.auto <- lda(mpg01 ~ displacement + weight + cylinders, data=autotraining)
lda.auto
lda.pred <- predict(lda.auto, autotraining)
lda.pred
lda.auto <- lda(mpg01 ~ displacement + weight + cylinders, data=autotraining, type = "response")
lda.pred <- predict(lda.auto, autotraining, type = "response")$class
lda.pred
lda.pred <- predict(lda.auto, autotest, type = "response")$class
lda.pred
table(lda.pred, test$mpg01)
table(lda.pred, autotest$mpg01)
lda.auto <- lda(mpg01 ~ displacement + weight + cylinders, data=autotraining, family = "binomial")
table(lda.pred, autotest$mpg01)
lda.auto <- lda(mpg01 ~ displacement + weight + cylinders, data=autotraining, family = "binomial")
lda.auto
lda.pred <- predict(lda.auto, newdata = autotest, type = "response")$class
lda.pred
lda.pred
table(lda.pred, autotest$mpg01)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data=training, family = "binomial")
train <- sample(1:dim(Auto)[1], size = dim(Auto [1]*0.75))
training <- Auto[train,]
test <- Auto[-train]
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data=training, family = "binomial")
lda.fit
lda.pred <- predict(lda.fit, newdata = test, type = "response")$class
lda.pred
table(lda.pred, test$mpg01)
lda.fit2 = lda(mpg01~displacement+weight+cylinders+year, data=training)
lda.fit2
pred.lda2 = predict(lda.fit2, newdata=test, type="response")$class
table(pred.lda2, test$mpg01)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data=training, family = "binomial", subset = training)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data=Auto, family = "binomial", subset = training)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data=Auto, subset = training)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data=Auto, subset = train)
lda.fit <- lda(mpg01 ~ displacement + weight + cylinders, data=Auto, family = "binomial", subset = train)
lda.fit
lda.pred <- predict(lda.fit, newdata = test, type = "response")$class
lda.pred
lda.pred
table(lda.pred, test$mpg01)
lda.pred <- predict(lda.fit, Auto.test)
lda.pred <- predict(lda.fit, test)
lda.pred
table(lda.pred, test$mpg01)
